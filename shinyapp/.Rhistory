shinyApp(ui, server)
library(shiny)
# Define server logic required to plot various variables against mpg
shinyServer(function(input, output) {
})
library(shiny)
# Define UI for miles per gallon application
shinyUI(pageWithSidebar(
# Application title
headerPanel("Miles Per Gallon"),
sidebarPanel(),
mainPanel()
))
library(shiny)
> runApp("~/shinyapp")
library(shiny)
runApp("~/shinyapp")
library(shiny)
runApp("~/shinyapp")
~/shinyapp
|-- ui.R
|-- server.R
setwd("~/Documents/GitHub/AOM-Project")
library(shiny)
runApp("~/shinyapp")
setwd("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(datasets)
mpgData <- mtcars
glimpse(mpgData)
library(tidyverse)
glimpse(mpgData)
mpgData$am <- factor(mpgData$am, labels = c("Automatic", "Manual"))
glimpse(mpgData)
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
glimpse(mpgData)
ComplSet <- read.csv("TimAllData.csv", header = TRUE)
glimpse(ComplSet)
ComplSet[ComplSet$Player == 'LeBron James',]
# choose columns to display
Lebron = ComplSet[ComplSet$Player == 'LeBron James',]
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
Lebron
Lebron$c(Year)
Lebron[,c('Year')]
Lebron[,c('Year','Cluster')]
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(DT)
install.packages(DT)
install.packages("DT")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
CarEvo = Lebron[,c('Year','Cluster')]
CarEvo
CarEvo[,1]
CarEvo[,1:2]
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
CarEvo
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
CarEvo
rename(CarEvo, "Cluster" = "Player Type")
rename(CarEvo, c("Cluster" = "Player Type"))
CarEvo = Lebron[,c('Year','Cluster')]
rename(CarEvo, c("Cluster" = "Player Type"))
names(CarEvo)
library(plyr)
rename(CarEvo, c("Cluster" = "Player Type"))
CarEvo
CarEvo <- rename(CarEvo, c("Cluster" = "Player Type"))
CarEvo
lapply(CarEvo["Player Type"], 1)
lapply(CarEvo["Player Type"], function(x) 1)
CarEvo["Player Type"]
GroupStr <- function(x){
if (x == 1){
"Group 1"
} else if (x == 2){
"Group 2"
} else if (x == 3){
"Group 3"
} else if (x == 4){
"Group 4"
} else if (x == 5){
"Group 5"
}
}
GroupStr(5)
lapply(CarEvo["Player Type"], GroupStr)
sapply(CarEvo["Player Type"], GroupStr)
sapply(CarEvo["Player Type"], print)
CarEvo[0]
CarEvo[1]
CarEvo[1,2]
CarEvo[3,2]
CarEvo[,2]
sapply(CarEvo[,2], print)
sapply(CarEvo[,2], GroupStr)
CarEvo[,2] <- sapply(CarEvo[,2], GroupStr)
CarEvo
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
input$n
input$n = 3
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
? paste
mpgData
mpg ~ am
hi 2
a = mpg ~ am
a
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
is.na([])
is.na(c())
a = NULL
a
is.null(a)
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
library(shiny)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
ps <- unique(ComplSet$Player)
ps
glimpse(ps)
dim(ps)
size(ps)
shape(ps)
ps[0]
ps[,]
length(ps)
rand
runif
runif(1,1,4)
ceil(runif(1,1,4))
round(runif(1,1,4)
round(runif(1,1,4))
round(runif(10,0.5,4.5))
imNums <- round(runif(length(ps),0.5,4.5))
cbind(ps,imNums)
ps
glimpse(ps)
ps[4]
ps[4]
ps[477]
glimpse(cbind(ps,imNums))
data.frame(ps)
data.frame(ps, imNums)
ImDF <- data.frame(ps, imNums)
ImDF[,1] == "Mike Dunleavy"
ImDF[,1][ImDF[,1] == "Mike Dunleavy"]
ImDF[,2][ImDF[,1] == "Mike Dunleavy"]
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
zeros(4)
zeroes(4)
seq(0,1)
round(-0.3)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
glimpse(ImDF)
ImDF[ps = "LeBron James"]
ImDF[ps == "LeBron James"]
ImDF[ps == "Tariq Abdul-Wahad"]
ImDF[ps == "Tariq Abdul-Wahad",]
ImDF[ps == "LeBron James",]
ImDF[ImDF[ps == "LeBron James",]]
ImDF[ImDF[ps == "LeBron James",],2]
ImDF[ps == "LeBron James",][1]
ImDF[ps == "LeBron James",][1]
ImDF[ps == "LeBron James",][0]
ImDF[ps == "LeBron James",][2]
ImDF[ps == "LeBron James",][2] = 5
ImDF[ImDF[ps == "LeBron James",],2]
ImDF[ps == "LeBron James",][2]
ImDF[ps == "LeBron James",]
ImDF[ps == "LeBron James",][2] = 5
ImDF[ps == "LeBron James",][2] = "Lebron"
ImDF[ps == "LeBron James",]
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
install.packages('shinydashboard')
shinyApp(ui, server)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
runApp("~/Documents/GitHub/AOM-Project/shinyapp")
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
currentPlayer = 'LeBron James
currentPlayer = 'LeBron James'
Lebron = ComplSet[ComplSet$Player == currentPlayer,]
glimpse(Lebron)
summary(Lebron)
a = summary(Lebron)
a
a.mean
a[Mean]
Lebron[,c('TOV','PF','PTS')]
mean(Lebron[,c('TOV','PF','PTS')])
sapply(Lebron[,c('TOV','PF','PTS')],mean)
source("app2.r", echo = TRUE)
a=1
type(a)
typeof(a)
print(2)
source("app2.r", echo = TRUE)
statMeans = sapply(Lebron[,c('TOV','PF','PTS')],mean)
typeof(statMeans)
statMeans
data.frame(statMeans)
data.frame(transpose(statMeans))
source("app2.r", echo = TRUE)
statMeans
data.frame(statMeans)
statMeans''
statMeans'
t(statMeans)
data.frame(t(statMeans))
source("app2.r", echo = TRUE)
source("app2.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
Lebron
Lebron['Cluster']
mode(Lebron['Cluster'])
Lebron['Cluster']
as.factor(Lebron['Cluster'])
list(Lebron['Cluster'])
as.factor(list(Lebron['Cluster']))
table(Lebron['Cluster'])
round(runif(4,0,10))
a = round(runif(4,0,10))
print(a)
table(a)
a = round(runif(10,0,10))
print(a)
table(a)
max(table(a))
argmax(table(a))
a = round(runif(10,0,10))
print(a)
sort(table(a))
a = round(runif(10,0,10))
print(a)
sort(table(a))
?sort
a = round(runif(10,0,10))
print(a)
b = sort(table(a), decreasing = TRUE)
a = round(runif(10,0,10))
print(a)
b = sort(table(a), decreasing = TRUE)
print(b)
b[0]
b[1]
b[1,1]
b[1]+1
a = round(runif(10,0,10))
print(a)
b = sort(table(a), decreasing = TRUE)
print(b)
c = names(b)
print(c)
c[1]
names(sort(table(a), decreasing = TRUE))
names(sort(table(a), decreasing = TRUE))[1]
int(names(sort(table(a), decreasing = TRUE))[1])
as.numeric("1")
source("app3.r", echo = TRUE)
currentPlayer = 'LeBron James
''
currentPlayer = 'LeBron James'
Lebron = ComplSet[ComplSet$Player == currentPlayer,]
ModeGroup =
GroupStr(as.numeric(names(
sort(table(list(
Lebron['Cluster'])), decreasing = TRUE))))
list(Lebron['Cluster'])), decreasing = TRUE))))
list(Lebron['Cluster'])
table(list(Lebron['Cluster']))
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
currentPlayer = 'Giannis Antetokounmpo'
Lebron = ComplSet[ComplSet$Player == currentPlayer,]
ModeGroup =
GroupStr(as.numeric(names(
sort(table(Lebron['Cluster']), decreasing = TRUE))))
Lebron = ComplSet[ComplSet$Player == currentPlayer,]
as.numeric(names(
sort(table(Lebron['Cluster']), decreasing = TRUE)))
Lebron['Cluster']
source("app3.r", echo = TRUE)
currentPlayer = 'Giannis Antetokounmpo'
Lebron = ComplSet[ComplSet$Player == currentPlayer,]
glimpse(Lebron)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
glimpse(Lebron)
glimpse(Lebron)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("app3.r", echo = TRUE)
source("NBA_app.r", echo = TRUE)
